apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: invidious-db
  name: invidious-db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: invidious-db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: invidious-db
    spec:
      containers:
      - name: invidious-db
        envFrom:
        - secretRef:
            name: invidious-secret
        image: docker.io/library/postgres:14
        imagePullPolicy: ""
        livenessProbe:
          exec:
            command:
            - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
        ports:
        - containerPort: 5432
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgresdata
        - mountPath: /config/sql
          name: invidious-db-claim1
        - mountPath: /docker-entrypoint-initdb.d/init-invidious-db.sh
          name: invidious-db-claim2
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: postgresdata
        persistentVolumeClaim:
          claimName: postgresdata
      - name: invidious-db-claim1
        persistentVolumeClaim:
          claimName: invidious-db-claim1
      - name: invidious-db-claim2
        persistentVolumeClaim:
          claimName: invidious-db-claim2
status: {}
