apiVersion: apps/v1
kind: Deployment
metadata:
  name: readarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: readarr
  template:
    metadata:
      labels:
        app: readarr
    spec:
      containers:
        - env:
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            - name: TZ
              value: America/New_York
          image: linuxserver/readarr:develop
          name: readarr
          ports:
            - containerPort: 8787
          resources: {}
          volumeMounts:
            - mountPath: /config
              name: readarr-config
            - mountPath: /data
              name: nfs-data
      restartPolicy: Always
      volumes:
        - name: nfs-data
          nfs:
            server: drebin.riles.xyz
            path: /tank/transmission_k8s_data
            readOnly: false
        - name: readarr-config
          nfs:
            server: drebin.riles.xyz
            path: /ssd_pool/readarr-config
            readOnly: false
---
apiVersion: v1
kind: Service
metadata:
  name: readarr
spec:
  ports:
    - name: "8787"
      port: 8787
      targetPort: 8787
  selector:
    app: readarr
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: readarr
  annotations:
    cert-manager.io/cluster-issuer: le-example-http
    external-dns.alpha.kubernetes.io/hostname: readarr.dev-riles.xyz.
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/server-snippets: |
      location / {
       proxy_http_version 1.1;
       proxy_set_header Upgrade $http_upgrade;
       proxy_set_header Connection $http_connection;
       }
spec:
  rules:
  - host: "readarr.dev-riles.xyz"
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: readarr
              port:
                number: 8787
  tls:
  - hosts:
    - readarr.dev-riles.xyz
    secretName: tls-readarr-ingress-http
