apiVersion: v1
kind: Service
metadata:
  name: flaresolverr
  labels:
    app.kubernetes.io/name: flaresolverr
  annotations:
spec:
  type: ClusterIP
  ports:
  - port: 8191
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: flaresolverr
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flaresolverr
  labels:
    app.kubernetes.io/name: flaresolverr
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: flaresolverr
      app.kubernetes.io/instance: flaresolverr
  template:
    metadata:
      labels:
        app.kubernetes.io/name: flaresolverr
        app.kubernetes.io/instance: flaresolverr
    spec:
      
      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: flaresolverr
          image: "ghcr.io/flaresolverr/flaresolverr:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              value: America/Toronto
          ports:
            - name: http
              containerPort: 8191
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 8191
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 8191
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 8191
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: flaresolverr
  annotations:
    cert-manager.io/cluster-issuer: le-example-http
    external-dns.alpha.kubernetes.io/hostname: flaresolverr.dev-riles.xyz.
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 50M
spec:
  rules:
  - host: "flaresolverr.dev-riles.xyz"
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: flaresolverr
              port:
                number: 8191
  tls:
  - hosts:
    - flaresolverr.dev-riles.xyz
    secretName: tls-flaresolverr-ingress-http
